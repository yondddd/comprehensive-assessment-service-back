<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lm.assessment.server.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.lm.assessment.server.model.UserDO">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="guid" column="guid" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="mobile" column="mobile" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="gender" column="gender" jdbcType="TINYINT"/>
            <result property="idcard" column="idCard" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="creationTime" column="creation_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,guid,name,
        email,mobile,password,
        gender,idCard,status,
        creation_time,update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where  id = #{id,jdbcType=INTEGER} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lm.assessment.server.model.UserDO" useGeneratedKeys="true">
        insert into user
        ( id,guid,name
        ,email,mobile,password
        ,gender,idCard,status
        ,creation_time,update_time)
        values (#{id,jdbcType=BIGINT},#{guid,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR}
        ,#{email,jdbcType=VARCHAR},#{mobile,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}
        ,#{gender,jdbcType=TINYINT},#{idcard,jdbcType=VARCHAR},#{status,jdbcType=TINYINT}
        ,#{creationTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lm.assessment.server.model.UserDO" useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="guid != null">guid,</if>
                <if test="name != null">name,</if>
                <if test="email != null">email,</if>
                <if test="mobile != null">mobile,</if>
                <if test="password != null">password,</if>
                <if test="gender != null">gender,</if>
                <if test="idcard != null">idCard,</if>
                <if test="status != null">status,</if>
                <if test="creationTime != null">creation_time,</if>
                <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null"> #{id,jdbcType=BIGINT},</if>
                <if test="guid != null"> #{guid,jdbcType=VARCHAR},</if>
                <if test="name != null"> #{name,jdbcType=VARCHAR},</if>
                <if test="email != null"> #{email,jdbcType=VARCHAR},</if>
                <if test="mobile != null"> #{mobile,jdbcType=VARCHAR},</if>
                <if test="password != null"> #{password,jdbcType=VARCHAR},</if>
                <if test="gender != null"> #{gender,jdbcType=TINYINT},</if>
                <if test="idcard != null"> #{idcard,jdbcType=VARCHAR},</if>
                <if test="status != null"> #{status,jdbcType=TINYINT},</if>
                <if test="creationTime != null"> #{creationTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null"> #{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lm.assessment.server.model.UserDO">
        update user
        <set>
                <if test="guid != null">
                    guid = #{guid,jdbcType=VARCHAR},
                </if>
                <if test="name != null">
                    name = #{name,jdbcType=VARCHAR},
                </if>
                <if test="email != null">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="mobile != null">
                    mobile = #{mobile,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    password = #{password,jdbcType=VARCHAR},
                </if>
                <if test="gender != null">
                    gender = #{gender,jdbcType=TINYINT},
                </if>
                <if test="idcard != null">
                    idCard = #{idcard,jdbcType=VARCHAR},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=TINYINT},
                </if>
                <if test="creationTime != null">
                    creation_time = #{creationTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lm.assessment.server.model.UserDO">
        update user
        set 
            guid =  #{guid,jdbcType=VARCHAR},
            name =  #{name,jdbcType=VARCHAR},
            email =  #{email,jdbcType=VARCHAR},
            mobile =  #{mobile,jdbcType=VARCHAR},
            password =  #{password,jdbcType=VARCHAR},
            gender =  #{gender,jdbcType=TINYINT},
            idCard =  #{idcard,jdbcType=VARCHAR},
            status =  #{status,jdbcType=TINYINT},
            creation_time =  #{creationTime,jdbcType=TIMESTAMP},
            update_time =  #{updateTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getOneByMobile" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where
        mobile = #{mobile,jdbcType=VARCHAR}
        limit 1
    </select>
    <select id="getOneByEmail" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where
        email = #{email,jdbcType=VARCHAR}
        limit 1
    </select>

    <select id="listById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where
        id in
        <foreach collection="ids" open="(" close=")" separator="," item="id">
            #{id,jdbcType=BIGINT}
        </foreach>
    </select>

</mapper>
